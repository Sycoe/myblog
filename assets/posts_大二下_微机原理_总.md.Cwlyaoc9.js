import{_ as e,c as r,o as t,af as o}from"./chunks/framework.B0E2DVLT.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/大二下/微机原理/总.md","filePath":"posts/大二下/微机原理/总.md"}'),h={name:"posts/大二下/微机原理/总.md"};function i(l,a,n,d,s,_){return t(),r("div",null,a[0]||(a[0]=[o(`<h2 id="_1、写出下列寄存器的功能和工作原理" tabindex="-1">1、写出下列寄存器的功能和工作原理 <a class="header-anchor" href="#_1、写出下列寄存器的功能和工作原理" aria-label="Permalink to &quot;1、写出下列寄存器的功能和工作原理&quot;">​</a></h2><h4 id="_1-通用寄存器" tabindex="-1">（1）通用寄存器： <a class="header-anchor" href="#_1-通用寄存器" aria-label="Permalink to &quot;（1）通用寄存器：&quot;">​</a></h4><h4 id="_2-段寄存器" tabindex="-1">（2）段寄存器： <a class="header-anchor" href="#_2-段寄存器" aria-label="Permalink to &quot;（2）段寄存器：&quot;">​</a></h4><h4 id="_3-标志寄存器" tabindex="-1">（3）标志寄存器： <a class="header-anchor" href="#_3-标志寄存器" aria-label="Permalink to &quot;（3）标志寄存器：&quot;">​</a></h4><h4 id="_4-指令指针寄存器" tabindex="-1">（4）指令指针寄存器： <a class="header-anchor" href="#_4-指令指针寄存器" aria-label="Permalink to &quot;（4）指令指针寄存器：&quot;">​</a></h4><h2 id="_2、中断" tabindex="-1">2、中断 <a class="header-anchor" href="#_2、中断" aria-label="Permalink to &quot;2、中断&quot;">​</a></h2><h4 id="_1-中断向量表的作用" tabindex="-1">(1)中断向量表的作用 <a class="header-anchor" href="#_1-中断向量表的作用" aria-label="Permalink to &quot;(1)中断向量表的作用&quot;">​</a></h4><h4 id="_2-8086的中断类型都有什么-对每一个类型做出介绍" tabindex="-1">(2)8086的中断类型都有什么，对每一个类型做出介绍 <a class="header-anchor" href="#_2-8086的中断类型都有什么-对每一个类型做出介绍" aria-label="Permalink to &quot;(2)8086的中断类型都有什么，对每一个类型做出介绍&quot;">​</a></h4><h4 id="_3-如何配置8259中断控制器" tabindex="-1">(3)如何配置8259中断控制器 <a class="header-anchor" href="#_3-如何配置8259中断控制器" aria-label="Permalink to &quot;(3)如何配置8259中断控制器&quot;">​</a></h4><h2 id="_3、计算物理地址" tabindex="-1">3、计算物理地址 <a class="header-anchor" href="#_3、计算物理地址" aria-label="Permalink to &quot;3、计算物理地址&quot;">​</a></h2><h4 id="_1-段寄存器和位移量的结合使用" tabindex="-1">（1）段寄存器和位移量的结合使用 <a class="header-anchor" href="#_1-段寄存器和位移量的结合使用" aria-label="Permalink to &quot;（1）段寄存器和位移量的结合使用&quot;">​</a></h4><h4 id="_2-计算各种寻址方式的物理地址" tabindex="-1">（2）计算各种寻址方式的物理地址 <a class="header-anchor" href="#_2-计算各种寻址方式的物理地址" aria-label="Permalink to &quot;（2）计算各种寻址方式的物理地址&quot;">​</a></h4><pre><code>直接寻址：
间接寻址：
立即寻址；
寄存器间接寻址：
</code></pre><h2 id="_4、总线连接图" tabindex="-1">4、总线连接图： <a class="header-anchor" href="#_4、总线连接图" aria-label="Permalink to &quot;4、总线连接图：&quot;">​</a></h2><h4 id="_1-如何绘制总线连接图" tabindex="-1">（1）如何绘制总线连接图： <a class="header-anchor" href="#_1-如何绘制总线连接图" aria-label="Permalink to &quot;（1）如何绘制总线连接图：&quot;">​</a></h4><h4 id="_2-解释你所画的总线连接图" tabindex="-1">（2）解释你所画的总线连接图： <a class="header-anchor" href="#_2-解释你所画的总线连接图" aria-label="Permalink to &quot;（2）解释你所画的总线连接图：&quot;">​</a></h4><h2 id="_5、cpu和外设的数据传输方式都有什么" tabindex="-1">5、CPU和外设的数据传输方式都有什么？ <a class="header-anchor" href="#_5、cpu和外设的数据传输方式都有什么" aria-label="Permalink to &quot;5、CPU和外设的数据传输方式都有什么？&quot;">​</a></h2><h2 id="_6、i-o端口地址是如何分配的" tabindex="-1">6、I/O端口地址是如何分配的？ <a class="header-anchor" href="#_6、i-o端口地址是如何分配的" aria-label="Permalink to &quot;6、I/O端口地址是如何分配的？&quot;">​</a></h2><h2 id="_7、汇编语言程序设计" tabindex="-1">7、汇编语言程序设计： <a class="header-anchor" href="#_7、汇编语言程序设计" aria-label="Permalink to &quot;7、汇编语言程序设计：&quot;">​</a></h2><h4 id="_1-常用的伪指令有哪些" tabindex="-1">（1）常用的伪指令有哪些 <a class="header-anchor" href="#_1-常用的伪指令有哪些" aria-label="Permalink to &quot;（1）常用的伪指令有哪些&quot;">​</a></h4><h4 id="_2-设计简单的汇编语言程序" tabindex="-1">（2）设计简单的汇编语言程序 <a class="header-anchor" href="#_2-设计简单的汇编语言程序" aria-label="Permalink to &quot;（2）设计简单的汇编语言程序&quot;">​</a></h4><h5 id="总结-重点复习指令系统-熟练掌握8086的指令格式、寻址方式-熟悉常用指令集" tabindex="-1">总结：重点复习指令系统，熟练掌握8086的指令格式、寻址方式，熟悉常用指令集 <a class="header-anchor" href="#总结-重点复习指令系统-熟练掌握8086的指令格式、寻址方式-熟悉常用指令集" aria-label="Permalink to &quot;总结：重点复习指令系统，熟练掌握8086的指令格式、寻址方式，熟悉常用指令集&quot;">​</a></h5><p>程序设计（汇编指令的对应） 物理地址计算</p>`,23)]))}const b=e(h,[["render",i]]);export{u as __pageData,b as default};
