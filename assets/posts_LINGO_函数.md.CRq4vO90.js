import{_ as e,c as x,o as t,af as s}from"./chunks/framework.B0E2DVLT.js";const i=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/LINGO/函数.md","filePath":"posts/LINGO/函数.md"}'),a={name:"posts/LINGO/函数.md"};function n(r,p,o,l,_,f){return t(),x("div",null,p[0]||(p[0]=[s("<p>1.4.1 算术运算符</p><p>＾ 乘方</p><p>﹡ 乘</p><p>／ 除</p><p>﹢ 加</p><p>﹣ 减</p><p>1.4.2 逻辑运算符</p><p>在 LINGO 中，逻辑运算符主要用于集循环函数的条件表达式中，来控制在函数中哪些 集成员被包含，哪些被排斥。在创建稀疏集时用在成员资格过滤器中。 LINGO 具有９种逻辑运算符</p><p>#not# 否定该操作数的逻辑值，＃not＃是一个一元运算符。</p><p>#eq# 若两个运算数相等，则为 true；否则为 false。</p><p>#ne# 若两个运算符不相等，则为 true；否则为 false。</p><p>#gt# 若左边的运算符严格大于右边的运算符，则为 true；否则为 false。</p><p>#ge# 若左边的运算符大于或等于右边的运算符，则为 true；否则为 false。</p><p>#lt# 若左边的运算符严格小于右边的运算符，则为 true；否则为 false。</p><p>#le# 若左边的运算符小于或等于右边的运算符，则为 true；否则为 false。</p><p>#and# 仅当两个参数都为 true 时，结果为 true；否则为 false。</p><p>#or# 仅当两个参数都为 false 时，结果为 false；否则为 true。</p><p>1.4.4 数学函数</p><p>LINGO 提供了大量的标准数学函数</p><p>@abs(x)返回 x 的绝对值。</p><p>@sin(x)返回 x 的正弦值，x 采用弧度制。</p><p>@cos(x)返回 x 的余弦值。</p><p>@tan(x)返回 x 的正切值。</p><p>@exp(x)返回常数 e 的 x 次方。</p><p>@log(x)返回 x 的自然对数。</p><p>@lgm(x)返回 x 的 gamma 函数的自然对数。</p><p>@mod(x,y)返回 x 除以 y 的余数。</p><p>@sign(x)如果 x0 时返回 1，当 x=0 时返回 0。</p><p>@floor(x)返回 x 的整数部分。当 x&gt;=0 时，返回不超过 x 的最大整数；当 x&lt;0 时，返回 不低于 x 的最大整数。</p><p>@smax(x1,x2,…,xn)返回 x1，x2，…，xn 中的最大值。</p><p>@smin(x1,x2,…,xn)返回 x1，x2，…，xn 中的最小值。</p><p>1.4.5 变量界定函数</p><p>变量界定函数实现对变量取值范围的附加限制，共 4 种</p><p>@bin(x)限制 x 为 0 或 1；</p><p>@bnd(L,x,U)限制 L≤x≤U；</p><p>@free(x)取消对变量 x 的默认下界为 0 的限制，即 x 可以取任意实数；</p><p>@gin(x)限制 x 为整数。</p><p>在默认情况下，LINGO 规定变量是非负的，也就是说下界为 0，上界为+∞。@free 取 消了默认的下界为 0 的限制，使变量也可以取负值。@bnd 用于设定一个变量的上下界,它也 可以取消默认下界为 0 的约束。</p><p>1.4.6 集循环函数</p><p>@for：该函数用来产生对集成员的约束。</p><p>@sum：该函数返回遍历指定的集成员的一个表达式的和。</p><p>@min 和@max：返回指定的集成员的一个表达式的最小值或最大值。</p>",42)]))}const d=e(a,[["render",n]]);export{i as __pageData,d as default};
