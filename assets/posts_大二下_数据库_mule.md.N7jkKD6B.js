import{_ as a,c as i,o as r,af as t}from"./chunks/framework.B0E2DVLT.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/大二下/数据库/mule.md","filePath":"posts/大二下/数据库/mule.md"}'),o={name:"posts/大二下/数据库/mule.md"};function e(n,l,s,h,u,d){return r(),i("div",null,l[0]||(l[0]=[t('<h2 id="题型" tabindex="-1">题型 <a class="header-anchor" href="#题型" aria-label="Permalink to &quot;题型&quot;">​</a></h2><ul><li><strong>选择题</strong>：10个，每个2分</li><li><strong>填空题</strong>：10个，每个空1分</li><li><strong>大题</strong>：关系数据理论、设计题，3个，每个20-30分</li></ul><h2 id="数据库概述" tabindex="-1">数据库概述 <a class="header-anchor" href="#数据库概述" aria-label="Permalink to &quot;数据库概述&quot;">​</a></h2><h3 id="数据管理技术的发展" tabindex="-1">数据管理技术的发展 <a class="header-anchor" href="#数据管理技术的发展" aria-label="Permalink to &quot;数据管理技术的发展&quot;">​</a></h3><ol><li><strong>人工管理</strong><ul><li>优点：无软件成本</li><li>缺点：效率低，容易出错</li></ul></li><li><strong>文件系统</strong><ul><li>优点：文件管理简单</li><li>缺点：数据冗余，缺乏安全性</li></ul></li><li><strong>数据库系统</strong><ul><li>优点：数据共享，减少冗余</li><li>缺点：复杂，成本高</li></ul></li></ol><h3 id="数据模型的要素" tabindex="-1">数据模型的要素 <a class="header-anchor" href="#数据模型的要素" aria-label="Permalink to &quot;数据模型的要素&quot;">​</a></h3><ul><li><strong>实体</strong>：现实世界中存在的事物或对象</li><li><strong>属性</strong>：实体的特征</li><li><strong>联系</strong>：实体之间的关系</li><li><strong>E-R图</strong>：实体-关系图</li></ul><h3 id="常用数据模型" tabindex="-1">常用数据模型 <a class="header-anchor" href="#常用数据模型" aria-label="Permalink to &quot;常用数据模型&quot;">​</a></h3><ul><li><strong>层次模型</strong></li><li><strong>网络模型</strong></li><li><strong>关系模型</strong></li></ul><h2 id="实例分析" tabindex="-1">实例分析 <a class="header-anchor" href="#实例分析" aria-label="Permalink to &quot;实例分析&quot;">​</a></h2><h3 id="水果店管理系统" tabindex="-1">水果店管理系统 <a class="header-anchor" href="#水果店管理系统" aria-label="Permalink to &quot;水果店管理系统&quot;">​</a></h3><ul><li><strong>实体</strong>： <ul><li>商店：商店编号、商店名、地址、电话、是否总店</li><li>顾客：顾客编号、姓名、地址、年龄、性别、VIP级别</li></ul></li><li><strong>联系</strong>： <ul><li>商店与顾客：多对多关系，涉及消费金额和日期</li></ul></li></ul><h3 id="学生选课系统" tabindex="-1">学生选课系统 <a class="header-anchor" href="#学生选课系统" aria-label="Permalink to &quot;学生选课系统&quot;">​</a></h3><ul><li><strong>实体</strong>： <ul><li>学生：学号、姓名、性别、年龄、班级</li><li>课程：课程号、课程名、学分</li></ul></li><li><strong>联系</strong>： <ul><li>选修记录：学号、课程号、成绩</li></ul></li></ul><h3 id="关系数据模型的概念" tabindex="-1">关系数据模型的概念 <a class="header-anchor" href="#关系数据模型的概念" aria-label="Permalink to &quot;关系数据模型的概念&quot;">​</a></h3><ul><li>属性、元组、分量、主码、域、关系模式</li><li>画E-R模型</li></ul><h2 id="关系模型" tabindex="-1">关系模型 <a class="header-anchor" href="#关系模型" aria-label="Permalink to &quot;关系模型&quot;">​</a></h2><h3 id="三级模式结构" tabindex="-1">三级模式结构 <a class="header-anchor" href="#三级模式结构" aria-label="Permalink to &quot;三级模式结构&quot;">​</a></h3><ul><li><strong>内部模式</strong>：物理存储结构</li><li><strong>概念模式</strong>：全局逻辑结构</li><li><strong>外部模式</strong>：用户视图</li></ul><h3 id="关系模型的性质" tabindex="-1">关系模型的性质 <a class="header-anchor" href="#关系模型的性质" aria-label="Permalink to &quot;关系模型的性质&quot;">​</a></h3><ul><li>域、笛卡儿积、元组、属性、分量、候选码、主码、外码、主属性、非主属性</li></ul><h2 id="关系代数" tabindex="-1">关系代数 <a class="header-anchor" href="#关系代数" aria-label="Permalink to &quot;关系代数&quot;">​</a></h2><h3 id="运算" tabindex="-1">运算 <a class="header-anchor" href="#运算" aria-label="Permalink to &quot;运算&quot;">​</a></h3><ul><li>选择、投影、连接、等值连接、自然连接、左外连接、右外连接、外连接、除</li><li>并、交、减、乘、与、或、非的符号</li></ul><h3 id="查询示例" tabindex="-1">查询示例 <a class="header-anchor" href="#查询示例" aria-label="Permalink to &quot;查询示例&quot;">​</a></h3><ul><li>查询信息安全专业中三月份生日的同学资料</li><li>查询小学期末成绩少于60分的学生家长联系方式</li><li>查询同时参加篮球和网球俱乐部的学生信息</li><li>查询借阅过所有张三曾借过小说的其他同学姓名</li></ul><h2 id="数据库设计" tabindex="-1">数据库设计 <a class="header-anchor" href="#数据库设计" aria-label="Permalink to &quot;数据库设计&quot;">​</a></h2><h3 id="便利店管理系统" tabindex="-1">便利店管理系统 <a class="header-anchor" href="#便利店管理系统" aria-label="Permalink to &quot;便利店管理系统&quot;">​</a></h3><ul><li><strong>实体</strong>： <ul><li>便利店：店名、国家、城市、地址</li><li>商品：商品ID、商品名称、数量、价格、促销折扣</li></ul></li><li><strong>E-R图</strong>、关系模式设计、SQL建表</li></ul><h2 id="sql" tabindex="-1">SQL <a class="header-anchor" href="#sql" aria-label="Permalink to &quot;SQL&quot;">​</a></h2><h3 id="基本操作" tabindex="-1">基本操作 <a class="header-anchor" href="#基本操作" aria-label="Permalink to &quot;基本操作&quot;">​</a></h3><ul><li>创建模式、删除模式</li><li>创建表、视图，查询、更新、删除</li></ul><h3 id="电影数据库设计" tabindex="-1">电影数据库设计 <a class="header-anchor" href="#电影数据库设计" aria-label="Permalink to &quot;电影数据库设计&quot;">​</a></h3><ul><li><strong>E-R图</strong>：定义演员和电影的多对多关系</li><li><strong>SQL</strong>：创建表格，查询特定条件下的电影信息</li></ul><h2 id="数据库安全" tabindex="-1">数据库安全 <a class="header-anchor" href="#数据库安全" aria-label="Permalink to &quot;数据库安全&quot;">​</a></h2><ul><li><strong>自主存取控制</strong></li><li><strong>强制存取控制</strong></li><li><strong>授权与回收</strong></li><li><strong>视图与权限管理</strong></li></ul><h2 id="数据库完整性" tabindex="-1">数据库完整性 <a class="header-anchor" href="#数据库完整性" aria-label="Permalink to &quot;数据库完整性&quot;">​</a></h2><ul><li><strong>实体完整性</strong></li><li><strong>参照完整性</strong></li><li><strong>用户定义完整性</strong></li><li><strong>CHECK子句</strong></li><li><strong>断言与触发器</strong></li></ul><h2 id="关系理论" tabindex="-1">关系理论 <a class="header-anchor" href="#关系理论" aria-label="Permalink to &quot;关系理论&quot;">​</a></h2><h3 id="范式" tabindex="-1">范式 <a class="header-anchor" href="#范式" aria-label="Permalink to &quot;范式&quot;">​</a></h3><ul><li><strong>第一范式</strong> (1NF)：消除重复组</li><li><strong>第二范式</strong> (2NF)：消除非主属性对码的部分函数依赖</li><li><strong>第三范式</strong> (3NF)：消除非主属性对码的传递函数依赖</li><li><strong>BCNF</strong>：消除主属性对码的传递函数依赖</li></ul><h2 id="综合应用" tabindex="-1">综合应用 <a class="header-anchor" href="#综合应用" aria-label="Permalink to &quot;综合应用&quot;">​</a></h2><ul><li>利用关系数据库分析问题、设计E-R模型、写出SQL语句建表及查询、优化表结构</li></ul>',43)]))}const q=a(o,[["render",e]]);export{c as __pageData,q as default};
