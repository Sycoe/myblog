import{_ as i,c as t,o as a,af as e}from"./chunks/framework.B0E2DVLT.js";const r=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/大二下/操作系统实验/操作系统实验5.md","filePath":"posts/大二下/操作系统实验/操作系统实验5.md"}'),l={name:"posts/大二下/操作系统实验/操作系统实验5.md"};function n(h,s,p,d,o,k){return a(),t("div",null,s[0]||(s[0]=[e(`<p>在UNIX或Linux系统中，文件系统使用inode来存储关于文件的信息。inode包含了文件的元数据，如文件大小、权限、所有者、创建时间等，但不包括文件名和文件内容。每个文件都有一个唯一的inode编号，可以通过<code>ls -i</code>命令来查看。以下是研究文件与inode之间关系的步骤：</p><ol><li><strong>创建文件</strong>：首先，创建两个简单的文本文件，例如<code>file1.txt</code>和<code>file2.txt</code>，并写入一些内容。</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;This is file1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1.txt</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;This is file2&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file2.txt</span></span></code></pre></div><ol start="2"><li><strong>查看inode信息</strong>：使用<code>ls -i</code>命令来查看文件和它们的inode编号。</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file2.txt</span></span></code></pre></div><ol start="3"><li><strong>创建硬链接</strong>：为<code>file1.txt</code>创建一个硬链接<code>file1_hardlink.txt</code>，并查看inode信息。</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1_hardlink.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1_hardlink.txt</span></span></code></pre></div><p>您会注意到<code>file1.txt</code>和<code>file1_hardlink.txt</code>具有相同的inode编号，因为它们指向同一个inode。 4. <strong>创建软链接</strong>：为<code>file2.txt</code>创建一个软链接<code>file2_softlink.txt</code>，并查看inode信息。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file2.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file2_softlink.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file2.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file2_softlink.txt</span></span></code></pre></div><p>您会注意到<code>file2.txt</code>和<code>file2_softlink.txt</code>具有不同的inode编号，因为软链接实际上是一个指向原始文件inode的新的inode。 5. <strong>查看inode详细信息</strong>：使用<code>stat</code>命令来查看inode的详细信息。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1.txt</span></span></code></pre></div><ol start="6"><li><strong>删除文件</strong>：删除一个文件，并查看另一个硬链接文件的inode信息。</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1_hardlink.txt</span></span></code></pre></div><p>您会注意到<code>file1_hardlink.txt</code>仍然存在，并且inode编号没有改变，因为删除文件只是删除了文件名到inode的链接，而不是inode本身。 通过这些步骤，您可以更深入地了解UNIX或Linux系统中文件与inode之间的关系。</p>`,14)]))}const g=i(l,[["render",n]]);export{r as __pageData,g as default};
