import{_ as e,c as t,o as r,af as o}from"./chunks/framework.B0E2DVLT.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/大二下/信安数基复习笔记/第1章整除.md","filePath":"posts/大二下/信安数基复习笔记/第1章整除.md"}'),l={name:"posts/大二下/信安数基复习笔记/第1章整除.md"};function i(s,a,d,c,h,n){return r(),t("div",null,a[0]||(a[0]=[o('<h2 id="本章考点" tabindex="-1">本章考点 <a class="header-anchor" href="#本章考点" aria-label="Permalink to &quot;本章考点&quot;">​</a></h2><p>1、利用整除结论证明（所以整除有什么结论，咋出题） 2、欧几里德计算大公因小公倍 （填空，计算，应用题）</p><h5 id="本章问题" tabindex="-1">本章问题 <a class="header-anchor" href="#本章问题" aria-label="Permalink to &quot;本章问题&quot;">​</a></h5><p>1、b|a 是什么意思？ 是谁除以谁没有余数？ 2、设 a = qb + r ，0 &lt;= r &lt; b 当 a = -81 ，b = 15 ，则 q = ？r = ？ 3、d =（ a，b ）表示的是什么意思？d = [ a ，b ]是什么意思？ 4、什么叫公倍数是最小公倍数的倍数？ 什么是公因数是最大公因数的因数？ 这两个性质在什么情况如何被应用? 5、辗转相除法的步骤是什么？它一般在解决什么问题的时候被应用？ 6、筛法是对小整数进行素数判断的有效方法，写出其使用方法</p><h3 id="_1-1-整除的概念" tabindex="-1">1.1 整除的概念 <a class="header-anchor" href="#_1-1-整除的概念" aria-label="Permalink to &quot;1.1 整除的概念&quot;">​</a></h3><div class="note custom-block github-alert"><p class="custom-block-title">+</p><p></p><h5 id="_1-1-1-a-b-b-a-c" tabindex="-1">1.1.1 a|b --&gt; b/a = c <a class="header-anchor" href="#_1-1-1-a-b-b-a-c" aria-label="Permalink to &quot;1.1.1  a|b --&gt; b/a = c&quot;">​</a></h5><h5 id="_1-1-2-带余除法" tabindex="-1">1.1.2 带余除法 <a class="header-anchor" href="#_1-1-2-带余除法" aria-label="Permalink to &quot;1.1.2 带余除法&quot;">​</a></h5><p>注意：余数必须大于零，负数问题尤其注意![[Pasted image 20240325170129.png]]</p></div><h3 id="_1-2-最大公因数" tabindex="-1">1.2 最大公因数 <a class="header-anchor" href="#_1-2-最大公因数" aria-label="Permalink to &quot;1.2 最大公因数&quot;">​</a></h3><div class="note custom-block github-alert"><p class="custom-block-title">+</p><p>d|a 且 d|b ，d&lt;=c ,则c是最大公因数，记为（a ，b） a|d 且 b|d ，d&lt;=m ,则d是最大公因数，记为 [a ，b] 1.2.1 不会</p></div><h3 id="_1-3-算术基本定理" tabindex="-1">1.3 算术基本定理 <a class="header-anchor" href="#_1-3-算术基本定理" aria-label="Permalink to &quot;1.3 算术基本定理&quot;">​</a></h3><h3 id="_1-4-欧几里得算法" tabindex="-1">1.4 欧几里得算法 <a class="header-anchor" href="#_1-4-欧几里得算法" aria-label="Permalink to &quot;1.4 欧几里得算法&quot;">​</a></h3><h3 id="_1-5-筛法" tabindex="-1">1.5 筛法 <a class="header-anchor" href="#_1-5-筛法" aria-label="Permalink to &quot;1.5 筛法&quot;">​</a></h3>',11)]))}const p=e(l,[["render",i]]);export{_ as __pageData,p as default};
